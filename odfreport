#!/usr/bin/python3
"""
Project py-odf-report
Â© 2017 Georges Khaznadar <georgesk@debian.org>
This project aims to make it easy to generate reports or multiple
documents from one ODF template and values coming from a database.
Values can be numbers, strings, dates, images.

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <http://www.gnu.org/licenses/>.
"""
import odfReport, os.path, sys, subprocess
import argparse
from odf import text, draw

def _(s):
    """Change this to use Gettext."""
    return s

if __name__=="__main__":
    thisdir=os.path.dirname(__file__)
    parser = argparse.ArgumentParser(description=_('Produce ODT or PDF files in a batch'))
    parser.add_argument('--pdf', action='store_true',
                        help=_('Produce PDF files (default: produce ODT)'))
    parser.add_argument('--verbose', type=int, metavar=_("VERBOSITY"), default=0,
                        help=_('Make the program more or less verbose. Useful values: [0,1,2]; defaults to 0.'))
    parser.add_argument('templatePath', nargs='?',
                        default=os.path.join(thisdir,"examples/sample1.odt"),
                        help=_('path to the template ODT file'))
    parser.add_argument('dataPath', nargs='?',
                        default=os.path.join(thisdir,"examples/data.csv"),
                        help=_('path to the CSV data file'))
    args = parser.parse_args()
    if args.pdf:
        # check that the command unoconv is installed
        if subprocess.call("type unoconv >/dev/null 2>&1", shell=True)!=0:
            print(_("""You are probably missing the command 'unoconv',
please install it (maybe a package named 'unoconv'?)"""))
            sys.exit(1)
    reporter=odfReport.Reporter(args.templatePath, args.dataPath, args.pdf, verbosity=args.verbose)
    print (_("Saved files:"), ", ".join(reporter.run()))
